{"version":3,"sources":["logo.svg","components/Class/Class.js","components/Class/ClassGraphQL.js","components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Class","props","info","_useState","useState","_useState2","Object","slicedToArray","classInfo","setClassInfo","useEffect","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","response","data","wrap","_context","prev","next","fetch","name","sent","json","console","log","stop","apply","this","arguments","fetchData","id","react_default","createElement","className","title","department","description","error","ClassGraphQL","query","concat","method","body","JSON","stringify","headers","Content-Type","course","Home","value","setValue","_useState3","_useState4","favoriteClasses","setClasses","onSubmit","event","preventDefault","includes","type","onChange","target","map","favClass","components_Class_Class","key","Class_ClassGraphQL","App","components_Home_Home","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.adb555da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import \"./Class.css\";\r\nimport React, {useState, useEffect} from 'react';\r\n\r\nfunction Class(props) {\r\n    const [classInfo, setClassInfo]= useState({});\r\n    const url = \"https://api.peterportal.org/rest/v0/courses/\"\r\n    useEffect(()=> {\r\n        const fetchData = async ()=>{\r\n            const response = await fetch(url + props.name);\r\n            const data = await response.json();\r\n            console.log(data);\r\n            setClassInfo(data);\r\n        }\r\n        fetchData();\r\n    }, [props.name]);\r\n    let info;\r\n    if(classInfo.id) {\r\n        info = <div className=\"information\">\r\n            <p id=\"title\">{classInfo.title}</p>\r\n            <p id=\"department\">{classInfo.department}</p>\r\n            <p id=\"description\">{classInfo.description}</p>\r\n        </div>\r\n    } else if (classInfo.error) {\r\n        info = <p>Class Not Found</p>\r\n    } else {\r\n        info = <p>Loading...</p>\r\n    }\r\n    return(\r\n        <div className=\"class\">\r\n            {props.name}\r\n            <div>\r\n                {info}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Class;","import \"./Class.css\";\r\nimport React, {useState, useEffect} from 'react';\r\n\r\nfunction ClassGraphQL(props) {\r\n    const [classInfo, setClassInfo]= useState({});\r\n    const url = \"https://api.peterportal.org/graphql\"\r\n    useEffect(()=> {\r\n        const fetchData = async ()=>{\r\n            const query = `\r\n                query {\r\n                    course(id:\"${props.name}\") {\r\n                        title\r\n                        department\r\n                        description\r\n                    }\r\n                }\r\n            `\r\n            const response = await fetch(url, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({query}),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n            setClassInfo(data.data.course);\r\n        }\r\n        fetchData();\r\n    }, [props.name]);\r\n    let info;\r\n    if (classInfo) {\r\n        info = <div className=\"information\">\r\n            <p id=\"title\">{classInfo.title}</p>\r\n            <p id=\"department\">{classInfo.department}</p>\r\n            <p id=\"description\">{classInfo.description}</p>\r\n        </div>\r\n    } else if (classInfo == null) {\r\n        info = <p>Class Not Found</p>\r\n    } else {\r\n        info = <p>Loading...</p>\r\n    }\r\n    return(\r\n        <div className=\"class\">\r\n            {props.name}\r\n            <div>\r\n                {info}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ClassGraphQL;","import React, {useState} from 'react';\r\nimport Class from '../Class/Class';\r\nimport ClassGraphQL from '../Class/ClassGraphQL';\r\nimport \"./Home.css\";\r\nfunction Home(props) {\r\n\r\n    const [value, setValue] = useState('');\r\n    const [favoriteClasses, setClasses] = useState([]);\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (!favoriteClasses.includes(value)) {\r\n            setClasses(favoriteClasses.concat(value));\r\n            setValue('');\r\n        }\r\n        console.log(favoriteClasses);\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Taylor's Favorite Classes</h1>\r\n            <h2>Try \"STATS67\"</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Add Favorite Class</label>\r\n                <input type =\"text\" value={value} onChange={handleChange}></input>\r\n                <button type =\"submit\">Add Class!</button>\r\n            </form>\r\n            <div className='my-classes'>\r\n                {favoriteClasses.map((favClass) =>\r\n                    <Class name={favClass} key={favClass}></Class>\r\n                )}\r\n            </div>\r\n            <div className='my-classes'>\r\n                {favoriteClasses.map((favClass) =>\r\n                    <ClassGraphQL name={favClass} key={favClass}></ClassGraphQL>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport Home from './components/Home/Home';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home></Home>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}